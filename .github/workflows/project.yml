name: Build Ionic Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    steps:
      # Step to Check out the repository
      - uses: actions/checkout@v3

      # Step to Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.1'

      # Step to Install Yarn, Angular CLI, and Ionic CLI
      - name: Install Yarn, Angular CLI, and Ionic CLI
        run: |
          npm install -g yarn @angular/cli @ionic/cli

      # Step to Install dependencies
      - name: Install dependencies
        run: yarn install

      # Step to Build the Ionic app
      - name: Build Ionic project
        run: yarn ionic build

      # Step to Add Android platform
      - name: Add Android platform
        run: |
          if [ ! -d "android" ]; then
            yarn cap add android
          fi

      # Step to Sync Capacitor with Android
      - name: Sync Capacitor with Android
        run: yarn cap sync android

      # Step to Set up Android Emulator
      - name: Set up Android environment
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          target: default
          arch: x86_64

      # Step to Start Android Emulator
      - name: Start Android Emulator
        run: |
          emulator -avd test -no-window -no-audio -gpu swiftshader &
          adb wait-for-device
          adb shell input keyevent 82

      # Step to Run Tests on Android Emulator
      - name: Run Tests on Android Emulator
        run: |
          appium & # Start Appium server
          yarn test:android # Assuming this runs the tests specifically for Android

      # Step to Add iOS platform
      - name: Add iOS platform
        run: |
          if [ ! -d "ios" ]; then
            yarn cap add ios
          fi

      # Step to Sync Capacitor with iOS
      - name: Sync Capacitor with iOS
        run: yarn cap sync ios

      # Step to Set up Xcode environment
      - name: Set up Xcode environment
        run: |
          sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
          xcodebuild -version

      # Step to Run Tests on iOS Simulator
      - name: Run Tests on iOS Simulator
        run: |
          appium & # Start Appium server
          yarn test:ios # Assuming this runs the tests specifically for iOS

      # Step to Build and Run on Android Emulator
      - name: Build and Run on Android Emulator
        run: |
          cd android
          ./gradlew assembleDebug
          adb install app/build/outputs/apk/debug/app-debug.apk
          adb shell am start -n "com.example.yourapp/.MainActivity"

      # Step to Build and Run on iOS Simulator
      - name: Build and Run on iOS Simulator
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12,OS=16.2' build